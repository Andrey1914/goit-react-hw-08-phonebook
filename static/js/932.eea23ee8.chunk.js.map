{"version":3,"file":"static/js/932.eea23ee8.chunk.js","mappings":"sQAwJA,IA7IyB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KAC1B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAwBC,EAAAA,EAAAA,MAAjBC,GAAP,eACA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACxB,MAAmCA,EAAMC,cAA3BC,EAAd,EAAQf,KAAiBgB,EAAzB,EAAyBA,OACE,CACzBhB,KAAMC,EACNC,MAAOC,EACPC,SAAUC,IAGOU,GAAWC,EAC/B,EAUKC,EAAO,CACXjB,KAAAA,EACAE,MAAAA,EACAE,SAAAA,GAGIc,EAAqB,WACzBR,EAAS,aAdLZ,GACFG,EAAQ,IAEVE,EAAS,IACTE,EAAY,GAab,EAkBD,OACE,+BACE,SAAC,IAAD,CAAOc,MAAO,CAAEC,gBAAgB,OAAD,OAASC,EAAT,MAA/B,UACE,SAAC,IAAD,CAAWC,SAAS,KAApB,UACE,UAAC,IAAD,CACEC,GAAI,CAEFC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAAC,IAAD,CACEC,UAAU,IACVC,MAAM,UACNC,SAAS,OACTC,WAAW,MACXC,UAAW,EALb,0DASA,UAAC,IAAD,CACEJ,UAAU,OACVK,SAAUlC,EAvCH,SAAAe,GACjBA,EAAMoB,iBACNxB,EAAaQ,GACViB,SACAC,MAAK,kBAAMjB,GAAN,IACLkB,OAAM,kBAAMC,EAAAA,GAAAA,MAAY,sCAAlB,GACV,EAEe,SAAAxB,GACdA,EAAMoB,iBACN1B,EAAcU,GACXiB,SACAC,MAAK,kBAAMjB,GAAN,IACLkB,OAAM,kBAAMC,EAAAA,GAAAA,MAAY,wBAAlB,GACV,EA0BWC,YAAU,EACVf,GAAI,CAAEgB,GAAI,GAJZ,UAMGzC,GACC,4BACE,SAAC,IAAD,CACE0C,KAAK,OACLxC,KAAK,OACLyC,MAAM,OACNzB,MAAOhB,EACP0C,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUjC,EACVkC,OAAO,SACPC,WAAS,MAIb,IAEF,4BACE,SAAC,IAAD,CACEP,KAAK,OACLxC,KAAK,QACLyC,MAAM,QACNzB,MAAOd,EACP0C,UAAQ,EACRC,SAAUjC,EACVkC,OAAO,SACPC,WAAS,OAGb,4BACE,SAAC,IAAD,CACEP,KAAK,WACLxC,KAAK,WACLyC,MAAM,WACNzB,MAAOZ,EACPwC,UAAQ,EACRC,SAAUjC,EACVkC,OAAO,SACPC,WAAS,OAGb,SAAC,IAAD,CACEP,KAAK,SACLO,WAAS,EACTC,QAAQ,YACRzB,GAAI,CAAEgB,GAAI,EAAGU,GAAI,GAJnB,SAMGnD,EAAO,eAAiB,cAG7B,SAAC,KAAD,YAMX,C,sECpJYoD,E,QAAQC,EAAAA,IAAH,oF,2FCAH,SAASC,IACtB,OACE,0BACE,SAAC,IAAD,CAAkBtD,MAAI,KAG3B,C","sources":["components/RegistrationForm/RegistrationForm.jsx","pages/PhonebookPageStyled.jsx","pages/RegistrationPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useAuthorizeUserMutation, useAddUserMutation } from 'redux/API';\nimport { useNavigate } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport background from '../images/bg-img3.jpg';\nimport { Image } from '../../pages/PhonebookPageStyled';\n\nconst RegistrationForm = ({ flag }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [authorizeUser] = useAuthorizeUserMutation();\n  const [registerUser] = useAddUserMutation();\n  const navigate = useNavigate();\n\n  const handleChangeInput = event => {\n    const { name: inputName, value } = event.currentTarget;\n    const inputNameSetterMap = {\n      name: setName,\n      email: setEmail,\n      password: setPassword,\n    };\n\n    inputNameSetterMap[inputName](value);\n  };\n\n  const reset = () => {\n    if (flag) {\n      setName('');\n    }\n    setEmail('');\n    setPassword('');\n  };\n\n  const user = {\n    name,\n    email,\n    password,\n  };\n\n  const navigateToContacts = () => {\n    navigate('/contacts');\n\n    reset();\n  };\n\n  const onRegister = event => {\n    event.preventDefault();\n    registerUser(user)\n      .unwrap()\n      .then(() => navigateToContacts())\n      .catch(() => toast.error('User with such email already exist.'));\n  };\n\n  const onLogin = event => {\n    event.preventDefault();\n    authorizeUser(user)\n      .unwrap()\n      .then(() => navigateToContacts())\n      .catch(() => toast.error('Sorry, user not found'));\n  };\n\n  return (\n    <>\n      <Image style={{ backgroundImage: `url(${background})` }}>\n        <Container maxWidth=\"xs\">\n          <Box\n            sx={{\n              // marginTop: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Box\n              component=\"p\"\n              color=\"#1976d2\"\n              fontSize=\"18px\"\n              fontWeight=\"500\"\n              marginTop={4}\n            >\n              Please, register or log in to your account.\n            </Box>\n            <Box\n              component=\"form\"\n              onSubmit={flag ? onRegister : onLogin}\n              noValidate\n              sx={{ mt: 1 }}\n            >\n              {flag ? (\n                <label>\n                  <TextField\n                    type=\"text\"\n                    name=\"name\"\n                    label=\"Name\"\n                    value={name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    onChange={handleChangeInput}\n                    margin=\"normal\"\n                    fullWidth\n                  />\n                </label>\n              ) : (\n                ''\n              )}\n              <label>\n                <TextField\n                  type=\"mail\"\n                  name=\"email\"\n                  label=\"Email\"\n                  value={email}\n                  required\n                  onChange={handleChangeInput}\n                  margin=\"normal\"\n                  fullWidth\n                />\n              </label>\n              <label>\n                <TextField\n                  type=\"password\"\n                  name=\"password\"\n                  label=\"Password\"\n                  value={password}\n                  required\n                  onChange={handleChangeInput}\n                  margin=\"normal\"\n                  fullWidth\n                />\n              </label>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                {flag ? 'Registration' : 'LogIn'}\n              </Button>\n            </Box>\n            <Toaster />\n          </Box>\n        </Container>\n      </Image>\n    </>\n  );\n};\n\nexport default RegistrationForm;\n","import styled from '@emotion/styled';\n\nexport const Image = styled.div`\n  width: 100%;\n  height: 864px;\n  background-size: cover;\n`;\n","import RegistrationForm from 'components/RegistrationForm/RegistrationForm';\n\nexport default function RegistrationPage() {\n  return (\n    <div>\n      <RegistrationForm flag />\n    </div>\n  );\n}\n"],"names":["flag","useState","name","setName","email","setEmail","password","setPassword","useAuthorizeUserMutation","authorizeUser","useAddUserMutation","registerUser","navigate","useNavigate","handleChangeInput","event","currentTarget","inputName","value","user","navigateToContacts","style","backgroundImage","background","maxWidth","sx","display","flexDirection","alignItems","component","color","fontSize","fontWeight","marginTop","onSubmit","preventDefault","unwrap","then","catch","toast","noValidate","mt","type","label","pattern","title","required","onChange","margin","fullWidth","variant","mb","Image","styled","RegistrationPage"],"sourceRoot":""}