{"version":3,"file":"static/js/587.c439ab0d.chunk.js","mappings":"0NAmEA,EAjEoB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACrB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,cAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GAKf,EAYKC,EAAQ,WACZP,EAAQ,IACRE,EAAU,GACX,EAED,OACE,kBAAML,SAhBa,SAAAO,GACnBA,EAAMI,iBAKNX,EAJgB,CACdE,KAAAA,EACAE,OAAAA,IAGFM,GACD,EAQC,WACE,qCAEE,kBACEE,KAAK,OACLV,KAAK,OACLO,MAAOP,EACPW,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUV,QAGd,uCAEE,kBACEM,KAAK,MACLV,KAAK,SACLO,MAAOL,EACPS,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUV,QAGd,mBAAQM,KAAK,SAAb,2BAGL,E,8BChEYK,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,MAAV,E,UCqCnC,EA/BoB,WAClB,IAAcC,GAAgBC,EAAAA,EAAAA,MAAtBC,KACFC,GAAWC,EAAAA,EAAAA,KAAY,SAAAN,GAAK,ODNN,SAACA,EAAOK,GACpC,IAAMJ,EAASF,EAAeC,GACxBO,EAAe,OAAGN,QAAH,IAAGA,OAAH,EAAGA,EAAQO,cAChC,cAAOH,QAAP,IAAOA,OAAP,EAAOA,EAAUJ,QAAO,SAAAQ,GAAO,oBAC7BA,QAD6B,IAC7BA,GAD6B,UAC7BA,EAASzB,YADoB,aAC7B,EAAewB,cAAcE,SAASH,EADT,GAGhC,CCAuCI,CAAeX,EAAOE,EAA1B,IAClC,GAAwBU,EAAAA,EAAAA,MAAjBC,GAAP,eAEA,OACE,8BACwB,KAAb,OAARR,QAAQ,IAARA,OAAA,EAAAA,EAAUS,QACT,uBAEA,+BACGT,QADH,IACGA,OADH,EACGA,EAAUU,KAAI,gBAAG/B,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAQ8B,EAAjB,EAAiBA,GAAjB,OACb,yBACE,yBACGhC,EADH,MACU,0BAAOE,KACf,SAAC+B,EAAA,EAAD,CACE,aAAW,SACXD,GAAIA,EACJE,QAAS,kBAAML,EAAcG,EAApB,EAHX,UAKE,SAACG,EAAA,EAAD,UARGH,EADI,OAkBxB,E,UCbD,EAnBe,WACb,IAAMI,GAAWC,EAAAA,EAAAA,MACXpB,GAASK,EAAAA,EAAAA,KAAY,SAAAN,GAAK,OAAID,EAAeC,EAAnB,IAOhC,OACE,2BACE,sDAEE,kBAAON,KAAK,OAAOH,MAAOU,EAAQH,SATnB,SAAAT,GACnB,IAAMiC,EAAajC,EAAMC,cAAcC,MACvC6B,GAASG,EAAAA,EAAAA,GAAcD,GACxB,QAUF,EChBc,SAASE,IACtB,IAAQpB,GAASD,EAAAA,EAAAA,MAATC,KACR,GAAwBqB,EAAAA,EAAAA,MAAjBC,GAAP,eASA,OACE,4BACE,uCACA,SAAC,EAAD,CAAa5C,SAXE,SAAA2B,GACbL,EAAKuB,MAAK,qBAAG3C,OAAoByB,EAAQzB,IAA/B,IACZ4C,MAAM,GAAD,OAAInB,EAAQzB,KAAZ,4BAGP0C,EAAcjB,EACf,KAMG,qCACA,SAAC,EAAD,IACCL,IAAQ,SAAC,EAAD,MAGd,C","sources":["components/ContactForm/ContactForm.jsx","redux/selectors.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/PhonebookPage.jsx"],"sourcesContent":["import { useState } from 'react';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n    onSubmit(contact);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInputChange}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInputChange}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","export const contactSelector = state => state.contacts;\nexport const filterSelector = state => state.filter;\n\nexport const filterContacts = (state, contacts) => {\n  const filter = filterSelector(state);\n  const normalizeFilter = filter?.toLowerCase();\n  return contacts?.filter(contact =>\n    contact?.name?.toLowerCase().includes(normalizeFilter)\n  );\n};\n","import * as React from 'react';\nimport { IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/selectors';\nimport { useDeleteContactMutation, useGetContactsQuery } from 'redux/API';\n\nconst ContactList = () => {\n  const { data: allContacts } = useGetContactsQuery();\n  const contacts = useSelector(state => filterContacts(state, allContacts));\n  const [deleteContact] = useDeleteContactMutation();\n\n  return (\n    <>\n      {contacts?.length === 0 ? (\n        'Phone book is empty'\n      ) : (\n        <ul>\n          {contacts?.map(({ name, number, id }) => (\n            <li key={id}>\n              <p>\n                {name}: <span>{number}</span>\n                <IconButton\n                  aria-label=\"delete\"\n                  id={id}\n                  onClick={() => deleteContact(id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterSelector } from 'redux/selectors';\nimport { filterContact } from 'redux/actions';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => filterSelector(state));\n\n  const changeFilter = event => {\n    const inputValue = event.currentTarget.value;\n    dispatch(filterContact(inputValue));\n  };\n\n  return (\n    <form>\n      <label>\n        Find contacts by name\n        <input type=\"text\" value={filter} onChange={changeFilter} />\n      </label>\n    </form>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useGetContactsQuery, useAddContactsMutation } from 'redux/API';\n\nexport default function PhonebookPage() {\n  const { data } = useGetContactsQuery();\n  const [createContact] = useAddContactsMutation();\n  const formSubmit = contact => {\n    if (data.some(({ name }) => name === contact.name)) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n    createContact(contact);\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={formSubmit} />\n      <h2>Contact</h2>\n      <Filter />\n      {data && <ContactList />}\n    </div>\n  );\n}\n"],"names":["onSubmit","useState","name","setName","number","setNumber","handleInputChange","event","currentTarget","value","reset","preventDefault","type","pattern","title","required","onChange","filterSelector","state","filter","allContacts","useGetContactsQuery","data","contacts","useSelector","normalizeFilter","toLowerCase","contact","includes","filterContacts","useDeleteContactMutation","deleteContact","length","map","id","IconButton","onClick","Delete","dispatch","useDispatch","inputValue","filterContact","PhonebookPage","useAddContactsMutation","createContact","some","alert"],"sourceRoot":""}